{"remainingRequest":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue-cli\\vue-admin-template-master\\src\\views\\addRegulations\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue-cli\\vue-admin-template-master\\src\\views\\addRegulations\\index.vue","mtime":1582296388415},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:\\\\vue-cli\\\\vue-admin-template-master\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _TinymceEditor = _interopRequireDefault(require(\"./TinymceEditor\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  components: {\n    TinymceEditor: _TinymceEditor.default\n  },\n  data: function data() {\n    return {\n      // dialogImageUrl: '',\n      dialogVisible: false,\n      disabled: false,\n      ifshow: false,\n      options: [],\n      twoOptions: [],\n      isAdd: true,\n      ruleForm: {\n        cid: '',\n        regulationsTypeId: '',\n        regulationsIconPath: '',\n        regulationsPartNo: '',\n        regulationsPartNoAlias: '',\n        regulationsVersion: '',\n        regulationsName: '',\n        regulationsShowStatus: '',\n        regulationsPdfName: '',\n        // 上传成功后的回调地址\n        regulationsPdfPath: '',\n        // 法规版本说明\n        regulationsVersionExplain: '',\n        // 上传成功后的回调的key\n        key: ''\n      },\n      rules: {\n        regulationsPartNo: [{\n          required: true,\n          message: '请输入法规部号',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          message: '请输入数字',\n          trigger: 'blur'\n        }],\n        regulationsPartNoAlias: [{\n          required: true,\n          message: '请输入法规部号别名',\n          trigger: 'blur'\n        }],\n        regulationsVersion: [{\n          required: true,\n          message: '请输入法规版本号',\n          trigger: 'blur'\n        }],\n        regulationsName: [{\n          required: true,\n          message: '请输入法规名称',\n          trigger: 'blur'\n        }],\n        regulationsShowStatus: [{\n          required: true,\n          message: '是否前台显示',\n          trigger: 'change'\n        }],\n        regulationsPdfName: [{\n          required: true,\n          message: '请输入法规PDF名称',\n          trigger: 'blur'\n        }],\n        msg: [{\n          required: true,\n          message: '请输入信息'\n        }],\n        regulationsTypeId: [{\n          required: true,\n          message: '请选择一级分类',\n          trigger: 'change'\n        }],\n        cid: [{\n          required: true,\n          message: '请选择二级分类',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    //初始化一级分类下拉\n    this.showOneType(); // this.setContent()\n    // this.$refs.editor.setContent(\"22222\")\n  },\n  methods: {\n    //显示一级下拉\n    showOneType: function showOneType() {\n      var _this2 = this;\n\n      this.$http.get(this.$url + 'regulationsTrype/showAllOneType').then(function (res) {\n        if (res.data.code == '2001') {\n          _this2.options = res.data.data;\n        } else {\n          _this2.options = [];\n        }\n      });\n    },\n    //显示二级分类下拉\n    isShow: function isShow() {\n      var _this3 = this;\n\n      this.ruleForm.cid = '';\n      this.twoOptions = [];\n      this.ifshow = true;\n      this.$http.get(this.$url + 'cassify/classifyList', {\n        params: {\n          'regulationsTypeId': this.ruleForm.regulationsTypeId\n        }\n      }).then(function (res) {\n        if (res.data.code == '2001') {\n          _this3.twoOptions = res.data.data;\n        } else {\n          _this3.twoOptions = [];\n        }\n      });\n    },\n    //移除图片清空图片的base64\n    handleRemove: function handleRemove(file, fileList) {\n      console.log(file, fileList);\n      this.ruleForm.regulationsIconPath = '';\n    },\n    handleChange: function handleChange(file, fileList) {\n      var _this4 = this;\n\n      this.getBase64(file.raw).then(function (res) {\n        _this4.ruleForm.regulationsIconPath = res;\n      });\n    },\n    // 图片转换base64\n    getBase64: function getBase64(file) {\n      return new Promise(function (resolve, reject) {\n        var reader = new FileReader();\n        var imgResult = '';\n        reader.readAsDataURL(file);\n\n        reader.onload = function () {\n          imgResult = reader.result;\n        };\n\n        reader.onerror = function (error) {\n          reject(error);\n        };\n\n        reader.onloadend = function () {\n          resolve(imgResult);\n        };\n      });\n    },\n    // pdf文件上传的方法\n    submitUpload: function submitUpload() {\n      this.$refs.upload.submit();\n    },\n    //删除pdf文件\n    handleRemovePDF: function handleRemovePDF(file, fileList) {\n      var _this5 = this;\n\n      this.isAdd = true;\n      console.log(file, fileList);\n\n      if (this.ruleForm.regulationsPdfPath != '' && this.ruleForm.key != '') {\n        this.$http.get(this.$url + 'regulations/delFile', {\n          params: {\n            'key': this.ruleForm.key\n          }\n        }).then(function (res) {\n          if (res.data.code == '2001') {\n            _this5.$message({\n              message: '文件删除成功',\n              type: 'success'\n            });\n\n            _this5.ruleForm.regulationsPdfPath = '';\n            _this5.ruleForm.key = '';\n          } else if (res.data.code == '2004') {\n            _this5.$message.error('文件删除失败');\n          }\n        });\n      }\n    },\n    handlePreviewPDF: function handlePreviewPDF(file) {\n      console.log(file);\n    },\n    //上传pdf文件之前的判读\n    beforeAvatarUploadPDF: function beforeAvatarUploadPDF(file) {\n      var fileName = file.name;\n      var pos = fileName.lastIndexOf('.');\n      var lastName = fileName.substring(pos, fileName.length);\n\n      if (lastName.toLowerCase() !== '.pdf') {\n        this.$message.error('请上传.pdf文件');\n        return false;\n      } else {\n        this.isAdd = false;\n      }\n    },\n    //pdf上传成功的回调函数\n    uploadSuccess: function uploadSuccess(response, file, fileList) {\n      this.isAdd = true;\n\n      if (response.code == '2001') {\n        this.ruleForm.regulationsPdfPath = response.url;\n        this.ruleForm.key = response.key;\n        this.$message({\n          message: '文件上传成功',\n          type: 'success'\n        });\n        console.log('key' + this.ruleForm.key);\n        console.log('path' + this.ruleForm.regulationsPdfPath);\n      } else {\n        this.$message.error('文件上传失败');\n      }\n    },\n    // 上传法规图标的方法\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var isJPG = file.type === 'image/jpeg';\n      var isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG) {\n        this.$message.error('上传头像图片只能是 JPG 格式!');\n      }\n\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 2MB!');\n      }\n\n      return isJPG && isLt2M;\n    },\n    //表单的提交\n    submitForm: function submitForm(formName) {\n      var _this6 = this;\n\n      if (this.isAdd) {\n        this.$refs[formName].validate(function (valid) {\n          if (valid) {\n            var _this = _this6;\n            console.log(JSON.stringify(_this.ruleForm));\n\n            _this6.$http.post(_this6.$url + 'regulations/addRegulations', _this.ruleForm).then(function (res) {\n              if (res.data.code == '2001') {\n                _this6.$message({\n                  message: '添加成功',\n                  type: 'success'\n                });\n\n                _this6.resetForm(formName);\n\n                _this6.ruleForm.regulationsPdfPath = '';\n                _this6.ruleForm.key = '';\n              } else {\n                _this6.$message.error('添加失败');\n              }\n            });\n          } else {\n            console.log('error submit!!');\n            return false;\n          }\n        });\n      } else {\n        this.$message.error('文件正在上传请稍后。。。');\n      }\n    },\n    //清空表单以及富文本编译器内容\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n      this.$refs.editor.clear();\n      this.ifshow = false;\n    },\n    //文本编译器点击事件\n    onClick: function onClick(e, editor) {\n      console.log('Element clicked');\n      console.log(e);\n      console.log(editor);\n    },\n    //获取文本编译器的HTML内容\n    getContent: function getContent() {\n      alert(this.$refs.editor.getContent());\n    },\n    //设置文本编译器的HTML内容\n    setContent: function setContent(msg) {\n      this.$refs.editor.setContent(msg);\n    },\n    getBack: function getBack() {\n      this.$router.push({\n        name: 'RegulationsList'\n      });\n    }\n  }\n};\nexports.default = _default;",null]}