{"remainingRequest":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\vue-cli\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue-cli\\vue-admin-template-master\\src\\views\\addClause\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue-cli\\vue-admin-template-master\\src\\views\\addClause\\index.vue","mtime":1582298050247},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TinymceEditor from \"../addRegulations/TinymceEditor\";\nexport default {\n  components: {\n    TinymceEditor: TinymceEditor\n  },\n  data: function data() {\n    return {\n      // dialogImageUrl: '',\n      // dialogVisible: false,\n      disabled: false,\n      regulationsList: [],\n      valueId: [],\n      // 联动选择框的id主键\n      ruleForm: {\n        regulationsId: '',\n        clauseNo: '',\n        clauseNoAlias: '',\n        clauseVersion: '',\n        clauseTitle: '',\n        clauseContent: '',\n        clauseAntistop: '',\n        directoryForeignKey: ''\n      },\n      rules: {\n        regulationsId: [{\n          required: true,\n          message: '请选择法规',\n          trigger: 'change'\n        }],\n        directoryForeignKey: [{\n          required: true,\n          message: '请选择法规目录',\n          trigger: 'change'\n        }],\n        clauseNo: [{\n          required: true,\n          message: '请输入条款编号',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          message: '请输入数字',\n          trigger: 'blur'\n        }],\n        clauseNoAlias: [{\n          required: true,\n          message: '请输入条款编号别名',\n          trigger: 'blur'\n        }],\n        clauseVersion: [{\n          required: true,\n          message: '请输入条款版本号',\n          trigger: 'blur'\n        }],\n        clauseTitle: [{\n          required: true,\n          message: '请输入条款标题',\n          trigger: 'blur'\n        }],\n        clauseContent: [{\n          required: true,\n          message: '请输入条款内容'\n        }],\n        clauseAntistop: [{\n          required: true,\n          message: '请输入关键词',\n          trigger: 'blur'\n        }]\n      },\n      options: []\n    };\n  },\n  created: function created() {\n    // 初始化一级分类下拉\n    this.getRegulations(); // this.setContent()\n    // this.$refs.editor.setContent(\"22222\")\n  },\n  methods: {\n    getRegulations: function getRegulations() {\n      var _this2 = this;\n\n      this.$http.post(this.$url + 'regulations/showAll').then(function (res) {\n        if (res.data.code == '2001') {\n          _this2.regulationsList = res.data.data;\n        } else {\n          _this2.regulationsList = [];\n        }\n      });\n    },\n    onChange: function onChange() {\n      var _this3 = this;\n\n      var params = new URLSearchParams();\n      params.append('directoryId', this.ruleForm.regulationsId);\n      this.$http.post(this.$url + 'directory/selectDirectoryById2', params).then(function (res) {\n        if (res.data.code == '2001') {\n          _this3.options = res.data.data;\n        } else {\n          _this3.options = [];\n        }\n      });\n    },\n    onHandleChange: function onHandleChange() {\n      console.log(JSON.stringify(this.valueId));\n\n      if (this.valueId.length === 1) {\n        this.ruleForm.directoryForeignKey = this.valueId[0];\n      } else {\n        this.ruleForm.directoryForeignKey = this.valueId[this.valueId.length - 1];\n      }\n    },\n    // 表单的提交\n    submitForm: function submitForm(formName) {\n      var _this4 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var _this = _this4;\n          console.log(JSON.stringify(_this.ruleForm));\n\n          _this4.$http.post(_this4.$url + 'clause/addClause', _this.ruleForm).then(function (res) {\n            if (res.data.code == '2001') {\n              _this4.$message({\n                message: '添加成功',\n                type: 'success'\n              }); // this.resetForm(formName)\n\n            } else {\n              _this4.$message.error('添加失败');\n            }\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    // 清空表单以及富文本编译器内容\n    // resetForm(formName) {\n    //   this.$refs[formName].resetFields()\n    //   this.$refs.editor.clear()\n    //   this.valueId=[]\n    //   this.options = []\n    // },\n    // 文本编译器点击事件\n    onClick: function onClick(e, editor) {\n      console.log('Element clicked');\n      console.log(e);\n      console.log(editor);\n    },\n    // 获取文本编译器的HTML内容\n    getContent: function getContent() {\n      alert(this.$refs.editor.getContent());\n    },\n    // 设置文本编译器的HTML内容\n    setContent: function setContent(msg) {\n      this.$refs.editor.setContent(msg);\n    },\n    getBack: function getBack() {\n      this.$router.push({\n        path: '/example/clauseList'\n      });\n    }\n  }\n};",null]}