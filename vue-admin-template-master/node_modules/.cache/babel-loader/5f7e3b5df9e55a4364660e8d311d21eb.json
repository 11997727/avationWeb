{"remainingRequest":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\vue-cli\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue-cli\\vue-admin-template-master\\src\\views\\directoryManage\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue-cli\\vue-admin-template-master\\src\\views\\directoryManage\\index.vue","mtime":1582291603570},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      ruleForm: {\n        level: '',\n        directoryNama: '',\n        regulationsForeignKey: ''\n      },\n      dialogFormVisible: false,\n      ruleForm2: {\n        // 上一级目录主信息\n        data: {},\n        // 当前目录的顺序\n        level: '',\n        // 当前目录的名称\n        directoryNama: '',\n        // 法规外键\n        regulationsForeignKey: '',\n        // 目录线索\n        directoryKey: '',\n        // 当前目录到根目录的距离\n        distance: '',\n        // 父id\n        parentId: ''\n      },\n      dialogFormVisible2: false,\n      ruleForm3: {\n        level: '',\n        directoryNama: '',\n        directoryId: ''\n      },\n      dialogFormVisible3: false,\n      flag: true,\n      regulationsTypeId: '',\n      // 一级分类主键\n      cid: '',\n      // 二级分类主键\n      regulationsId: '',\n      // 法规主键\n      data: [],\n      options: [],\n      twoOptions: [],\n      threeOptions: [],\n      rules: {\n        level: [{\n          required: true,\n          message: '请输入同级排序',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          message: '请输入数字',\n          trigger: 'blur'\n        }],\n        directoryNama: [{\n          required: true,\n          message: '请输入目录名称'\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.showOneType(); // this.getData()\n  },\n  methods: {\n    // 显示一级下拉\n    showOneType: function showOneType() {\n      var _this = this;\n\n      this.$http.get(this.$url + 'regulationsTrype/showAllOneType').then(function (res) {\n        if (res.data.code == '2001') {\n          _this.options = res.data.data;\n        } else {\n          _this.options = [];\n        }\n      });\n    },\n    // 显示二级分类下拉\n    isShow: function isShow() {\n      var _this2 = this;\n\n      this.flag = true;\n      this.twoOptions = [];\n      this.threeOptions = [];\n      this.data = [];\n      this.cid = '';\n      this.regulationsId = '';\n      this.$http.get(this.$url + 'cassify/classifyList', {\n        params: {\n          'regulationsTypeId': this.regulationsTypeId\n        }\n      }).then(function (res) {\n        if (res.data.code == '2001') {\n          _this2.twoOptions = res.data.data;\n        } else {\n          _this2.twoOptions = [];\n        }\n      });\n    },\n    // 显示法规的下拉\n    isShowfagui: function isShowfagui() {\n      var _this3 = this;\n\n      this.threeOptions = [];\n      this.data = [];\n      this.regulationsId = '';\n      var params = new URLSearchParams();\n      params.append('cid', this.cid);\n      this.$http.post(this.$url + 'regulations/showRegulationsNameAndId', params).then(function (res) {\n        if (res.data.code == '2001') {\n          _this3.threeOptions = res.data.data;\n        } else {\n          _this3.threeOptions = [];\n          _this3.flag = true;\n        }\n      });\n    },\n    showTree: function showTree() {\n      this.getData();\n    },\n    submitForm: function submitForm(formName) {\n      var _this4 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this4.dialogFormVisible = false;\n          _this4.ruleForm.regulationsForeignKey = _this4.regulationsId;\n\n          _this4.$http.post(_this4.$url + 'directory/addOneDirectoryById', _this4.ruleForm).then(function (res) {\n            if (res.data.code == '2001') {\n              _this4.$message({\n                message: '添加成功',\n                type: 'success'\n              });\n\n              _this4.quxiao(formName);\n\n              _this4.showTree();\n            } else {\n              _this4.$message.error('添加失败');\n            }\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    quxiao: function quxiao(formName) {\n      this.dialogFormVisible = false;\n      this.$refs[formName].resetFields();\n    },\n    // 添加目录\n    append: function append(node, data) {\n      this.dialogFormVisible2 = true; // console.log(JSON.stringify(data))\n\n      this.ruleForm2.data = data; // console.log(node)\n    },\n    submitForm2: function submitForm2(formName) {\n      var _this5 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this5.ruleForm2.regulationsForeignKey = _this5.regulationsId;\n          _this5.dialogFormVisible2 = false;\n          console.log(\"这是父级目录\");\n          console.log(JSON.stringify(_this5.ruleForm2.data)); // 如果添加的是一级目录下的节点那么  目录线索就是一级目录主键加一级目录的线索\n\n          if (_this5.ruleForm2.data.pid == '0') {\n            console.log(\"是在一级目录下添加的\");\n            _this5.ruleForm2.directoryKey = _this5.ruleForm2.data.id + _this5.ruleForm2.data.directoryKey;\n          } else {\n            // 如果不是一级目录下的节点  那么，目录线索就是父节目录的线索加父节目录的主键加-\n            _this5.ruleForm2.directoryKey = _this5.ruleForm2.data.directoryKey + _this5.ruleForm2.data.id + '-';\n          } // 当前目录距离根节点的距离\n\n\n          _this5.ruleForm2.distance = parseInt(_this5.ruleForm2.data.distance) + 1; // 当前目录的父id\n\n          _this5.ruleForm2.parentId = _this5.ruleForm2.data.id;\n          var params = new URLSearchParams();\n          params.append('directoryNama', _this5.ruleForm2.directoryNama);\n          params.append('parentId', _this5.ruleForm2.parentId);\n          params.append('directoryKey', _this5.ruleForm2.directoryKey);\n          params.append('distance', _this5.ruleForm2.distance);\n          params.append('level', _this5.ruleForm2.level);\n          params.append('regulationsForeignKey', _this5.ruleForm2.regulationsForeignKey);\n\n          _this5.$http.post(_this5.$url + 'directory/addZiDirectory', params).then(function (res) {\n            if (res.data.code == '2001') {\n              _this5.$message({\n                message: '添加成功',\n                type: 'success'\n              }); // console.log(JSON.stringify(node.parent.data))\n\n\n              var newChild = {\n                id: parseInt(res.data.data),\n                label: _this5.ruleForm2.directoryNama,\n                lever: _this5.ruleForm2.level,\n                directoryKey: _this5.ruleForm2.directoryKey,\n                distance: _this5.ruleForm2.distance,\n                pid: _this5.ruleForm2.parentId,\n                children: []\n              };\n\n              if (!_this5.ruleForm2.data.children) {\n                _this5.$set(_this5.ruleForm2.data, 'children', []);\n              }\n\n              _this5.ruleForm2.data.children.push(newChild);\n\n              console.log(JSON.stringify(newChild));\n\n              _this5.getData(); // 需要异步刷新更新目录顺序，不需要更新目录顺序直接注释\n\n\n              _this5.quxiao2(formName);\n            } else {\n              _this5.$message.error('添加失败');\n            }\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    quxiao2: function quxiao2(formName) {\n      this.dialogFormVisible2 = false;\n      this.$refs[formName].resetFields();\n      this.ruleForm2.data = {};\n    },\n    // 删除目录\n    remove: function remove(node, data) {\n      var _this6 = this;\n\n      // alert(JSON.stringify(data))\n      // 要删除的目录主键\n      var directoryId = data.id; // 该目录下的子孙目录线索\n\n      var directoryKey = '';\n\n      if (data.pid == '0') {\n        directoryKey = data.id + data.directoryKey;\n      } else {\n        directoryKey = data.directoryKey + data.id + '-';\n      }\n\n      console.log(directoryId);\n      console.log(directoryKey);\n      var params = new URLSearchParams();\n      params.append('directoryId', directoryId);\n      params.append('directoryKey', directoryKey);\n      this.$http.post(this.$url + 'directory/delDirectory', params).then(function (res) {\n        if (res.data.code == '2001') {\n          _this6.$message({\n            message: '删除成功',\n            type: 'success'\n          });\n\n          var parent = node.parent;\n          var children = parent.data.children || parent.data;\n          var index = children.findIndex(function (d) {\n            return d.id === data.id;\n          });\n          children.splice(index, 1);\n        } else {\n          _this6.$message.error('删除失败');\n        }\n      });\n    },\n    // 修改同级目录排序\n    updateKeyChildren: function updateKeyChildren(data) {\n      this.dialogFormVisible3 = true;\n      this.ruleForm3.directoryId = data.id;\n      this.ruleForm3.directoryNama = data.label;\n      this.ruleForm3.level = data.lever;\n    },\n    submitForm3: function submitForm3(formName) {\n      var _this7 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          _this7.dialogFormVisible3 = false;\n\n          _this7.$http.post(_this7.$url + 'directory/updateDirectoryById', _this7.ruleForm3).then(function (res) {\n            if (res.data.code == '2001') {\n              _this7.$message({\n                message: '修改成功',\n                type: 'success'\n              });\n\n              _this7.quxiao3(formName);\n\n              _this7.getData();\n            } else {\n              _this7.$message.error('修改失败');\n            }\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    quxiao3: function quxiao3(formName) {\n      this.dialogFormVisible3 = false;\n      this.$refs[formName].resetFields();\n    },\n    getData: function getData() {\n      var _this8 = this;\n\n      var params = new URLSearchParams();\n      params.append('directoryId', this.regulationsId);\n      this.$http.post(this.$url + 'directory/selectDirectoryById2', params).then(function (res) {\n        if (res.data.code == '2001') {\n          console.log(JSON.stringify(res.data.data));\n          _this8.data = res.data.data;\n          _this8.flag = false;\n        } else {\n          _this8.data = [];\n          _this8.flag = false;\n        }\n      });\n    }\n  }\n};",null]}