{"remainingRequest":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\thread-loader\\dist\\cjs.js!E:\\vue-cli\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js!E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue-cli\\vue-admin-template-master\\src\\views\\RegulationsTrype\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue-cli\\vue-admin-template-master\\src\\views\\RegulationsTrype\\index.vue","mtime":1582293472597},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'RegulationsTrype',\n  data: function data() {\n    return {\n      dialogFormVisible: false,\n      dialogTableVisible: false,\n      tableData: [],\n      search: '',\n      search2: '',\n      loading: true,\n      gridData: [],\n      cid: '',\n      regulationsTypeId: '',\n      form: {}\n    };\n  },\n  mounted: function mounted() {\n    this.getData();\n  },\n  methods: {\n    btn: function btn() {\n      var _this2 = this;\n\n      // 新增分类\n      this.$prompt('请输入一级分类名称', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputPattern: /^[\\s\\S]*.*[^\\s][\\s\\S]*$/,\n        inputErrorMessage: '请输入'\n      }).then(function (_ref) {\n        var value = _ref.value;\n\n        _this2.$http.get(_this2.$url + 'regulationsTrype/addOneType', {\n          params: {\n            'regulationsTypeName': value\n          }\n        }).then(function (res) {\n          if (res.data.code == '2001') {\n            _this2.$message({\n              type: 'success',\n              message: '添加成功 '\n            });\n\n            _this2.getData();\n          } else {\n            _this2.$message.error('添加失败');\n          }\n        });\n      }).catch(function () {\n        _this2.$message({\n          type: 'info',\n          message: '取消输入'\n        });\n      });\n    },\n    // 点击展开二级分类列表\n    handleEdit: function handleEdit(index, row) {\n      // console.log(index, row)\n      this.regulationsTypeId = row.regulationsTypeId;\n      this.getGridData();\n      this.dialogTableVisible = true;\n    },\n    getGridData: function getGridData() {\n      var _this3 = this;\n\n      this.$http.get(this.$url + 'cassify/classifyList', {\n        params: {\n          'regulationsTypeId': this.regulationsTypeId\n        }\n      }).then(function (res) {\n        if (res.data.code == '2001') {\n          _this3.gridData = res.data.data;\n        } else {\n          _this3.gridData = [];\n        }\n      });\n    },\n    btn2: function btn2() {\n      var _this4 = this;\n\n      // 新增分类\n      var _this = this;\n\n      var ck = _this.regulationsTypeId;\n      this.$prompt('请输入二级分类名称', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputPattern: /^[\\s\\S]*.*[^\\s][\\s\\S]*$/,\n        inputErrorMessage: '请输入'\n      }).then(function (_ref2) {\n        var value = _ref2.value;\n\n        // const params = new URLSearchParams()\n        // params.append('ck', ck)\n        // params.append('cname', value.toString())\n        _this.$http.get(_this4.$url + 'cassify/addCassify', {\n          params: {\n            'cname': value,\n            'ck': ck\n          }\n        }).then(function (res) {\n          if (res.data.code == '2001') {\n            _this.$message({\n              type: 'success',\n              message: '添加成功 '\n            });\n\n            _this.getGridData();\n          } else {\n            _this4.$message.error('添加失败');\n          }\n        });\n      }).catch(function () {\n        _this4.$message({\n          type: 'info',\n          message: '取消输入'\n        });\n      });\n    },\n    // 打开二级form表单\n    handleEdit2: function handleEdit2(index, row) {\n      this.dialogFormVisible = true; // this.form.cname=row.cname\n\n      this.cid = row.cid;\n    },\n    handleDelete2: function handleDelete2(index, row) {\n      var _this = this;\n\n      var params = new URLSearchParams();\n      params.append('cid', row.cid);\n      this.$http.post(_this.$url + 'cassify/delClassifyByCid', params).then(function (res) {\n        console.log(JSON.stringify(res.data));\n\n        if (res.data.code == '2001') {\n          _this.$message({\n            type: 'success',\n            message: '删除成功 '\n          }); // alert('成功')\n\n\n          _this.getGridData();\n        } else {\n          _this.$message.error('删除失败'); // alert('失败')\n\n        }\n      });\n    },\n    // 提交表单修改二级分类名\n    dialogForm: function dialogForm() {\n      var _this5 = this;\n\n      var _this = this;\n\n      _this.$http.get(this.$url + 'cassify/classifyUpdateByCid', {\n        params: {\n          'cid': this.cid,\n          'cname': this.form.cname\n        }\n      }).then(function (res) {\n        if (res.data.code == '2001') {\n          _this5.$message({\n            type: 'success',\n            message: '修改成功 '\n          });\n\n          _this.dialogFormVisible = false;\n\n          _this.getGridData();\n        } else {\n          _this.$message.error('修改失败');\n        }\n\n        _this5.form.cname = '';\n      });\n    },\n    closeDialog: function closeDialog() {\n      this.getData();\n    },\n    // 删除一级\n    handleDelete: function handleDelete(index, row) {\n      var _this6 = this;\n\n      // 删除一级分类包含二级\n      console.log(row.regulationsTypeId);\n      this.$http.get(this.$url + 'regulationsTrype/delregulationsTrype', {\n        params: {\n          'regulationsTypeId': row.regulationsTypeId\n        }\n      }).then(function (res) {\n        if (res.data.code == '2001') {\n          _this6.$message({\n            message: '删除成功',\n            type: 'success'\n          });\n\n          _this6.getData();\n        } else {\n          _this6.$message.error('删除失败');\n        }\n      });\n    },\n    getData: function getData() {\n      var _this7 = this;\n\n      this.$http.post(this.$url + 'regulationsTrype/regulationsTrypeList').then(function (res) {\n        if (res.data.code == '2001') {\n          _this7.loading = false;\n          _this7.tableData = res.data.data;\n        } else {\n          _this7.total = res.data.count;\n          _this7.loading = false;\n          _this7.tableData = [];\n        }\n      });\n    }\n  }\n};",null]}