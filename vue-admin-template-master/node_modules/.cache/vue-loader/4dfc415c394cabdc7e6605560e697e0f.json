{"remainingRequest":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue-cli\\vue-admin-template-master\\src\\views\\RegulationsTrype\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue-cli\\vue-admin-template-master\\src\\views\\RegulationsTrype\\index.vue","mtime":1582551152809},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'RegulationsTrype',\n  data() {\n    return {\n      dialogFormVisible: false,\n      dialogTableVisible: false,\n      tableData: [],\n      search: '',\n      search2: '',\n      loading: true,\n      gridData: [],\n      cid: '',\n      regulationsTypeId: '',\n      form: {\n        cname:''\n      },\n      rules: {\n        cname: [\n          { required: true, message: '请输入二级分类名称', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  mounted() {\n    this.getData()\n  },\n  methods: {\n    btn() {\n      // 新增分类\n      this.$prompt('请输入一级分类名称', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputPattern: /^[\\s\\S]*.*[^\\s][\\s\\S]*$/,\n        inputErrorMessage: '请输入'\n      }).then(({ value }) => {\n        this.$http.get(this.$url + 'regulationsTrype/addOneType', {\n          params: { 'regulationsTypeName': value }\n        }).then((res) => {\n          if (res.data.code == '2001') {\n            this.$message({\n              type: 'success',\n              message: '添加成功 '\n            })\n            this.getData()\n          } else {\n            this.$message.error('添加失败')\n          }\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消输入'\n        })\n      })\n    },\n    // 点击展开二级分类列表\n    handleEdit(index, row) {\n      // console.log(index, row)\n      this.regulationsTypeId = row.regulationsTypeId\n      this.getGridData()\n      this.dialogTableVisible = true\n    },\n    getGridData() {\n      this.$http.get(this.$url + 'cassify/classifyList', {\n        params: { 'regulationsTypeId': this.regulationsTypeId }\n      }).then((res) => {\n        if (res.data.code == '2001') {\n          this.gridData = res.data.data\n        } else {\n          this.gridData = []\n        }\n      })\n    },\n    btn2() {\n      // 新增分类\n      const _this = this\n      var ck = _this.regulationsTypeId\n      this.$prompt('请输入二级分类名称', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputPattern: /^[\\s\\S]*.*[^\\s][\\s\\S]*$/,\n        inputErrorMessage: '请输入'\n      }).then(({ value }) => {\n        // const params = new URLSearchParams()\n        // params.append('ck', ck)\n        // params.append('cname', value.toString())\n        _this.$http.get(this.$url + 'cassify/addCassify', {\n          params: { 'cname': value, 'ck': ck }\n        }).then((res) => {\n          if (res.data.code == '2001') {\n            _this.$message({\n              type: 'success',\n              message: '添加成功 '\n            })\n            _this.getGridData()\n          } else {\n            this.$message.error('添加失败')\n          }\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '取消输入'\n        })\n      })\n    },\n    // 打开二级form表单\n    handleEdit2(index, row) {\n      this.dialogFormVisible = true\n      // this.form.cname=row.cname\n      this.cid = row.cid\n    },\n    handleDelete2(index, row) {\n      var _this = this\n      const params = new URLSearchParams()\n      params.append('cid', row.cid)\n      this.$http.post(_this.$url + 'cassify/delClassifyByCid', params).then(function(res) {\n        console.log(JSON.stringify(res.data))\n        if (res.data.code == '2001') {\n          _this.$message({\n            type: 'success',\n            message: '删除成功 '\n          })\n          // alert('成功')\n          _this.getGridData()\n        } else {\n          _this.$message.error('删除失败')\n          // alert('失败')\n        }\n      })\n    },\n    // 提交表单修改二级分类名\n    dialogForm(form) {\n      this.$refs[form].validate((valid) => {\n        if (valid) {\n          var _this = this\n          _this.$http.get(this.$url + 'cassify/classifyUpdateByCid', {\n            params: { 'cid': this.cid, 'cname': this.form.cname }\n          }).then((res) => {\n            if (res.data.code == '2001') {\n              this.$message({\n                type: 'success',\n                message: '修改成功 '\n              })\n              _this.dialogFormVisible = false\n              _this.getGridData()\n            } else {\n              _this.$message.error('修改失败')\n            }\n            // this.form.cname = ''\n            this.$refs[form].resetFields();\n          })\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n\n    quxiao(form){\n      this.dialogFormVisible=false\n      this.$refs[form].resetFields();\n    },\n    closeDialog() {\n      this.getData()\n    },\n    // 删除一级\n    handleDelete(index, row) {\n      // 删除一级分类包含二级\n      console.log(row.regulationsTypeId)\n      this.$http.get(this.$url + 'regulationsTrype/delregulationsTrype', {\n        params: { 'regulationsTypeId': row.regulationsTypeId }\n      }).then((res) => {\n        if (res.data.code == '2001') {\n          this.$message({\n            message: '删除成功',\n            type: 'success'\n          })\n          this.getData()\n        } else {\n          this.$message.error('删除失败')\n        }\n      })\n    },\n    getData() {\n      this.$http.post(this.$url + 'regulationsTrype/regulationsTrypeList').then((res) => {\n        if (res.data.code == '2001') {\n          this.loading = false\n          this.tableData = res.data.data\n        } else {\n          this.total = res.data.count\n          this.loading = false\n          this.tableData = []\n        }\n      })\n    }\n  }\n}\n",null]}