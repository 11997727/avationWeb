{"remainingRequest":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue-cli\\vue-admin-template-master\\src\\views\\directoryManage\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue-cli\\vue-admin-template-master\\src\\views\\directoryManage\\index.vue","mtime":1582552007240},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      ruleForm: {\n        level: '',\n        directoryNama: '',\n        regulationsForeignKey: ''\n      },\n      dialogFormVisible: false,\n\n      ruleForm2: {\n        // 上一级目录主信息\n        data: {},\n        // 当前目录的顺序\n        level: '',\n        // 当前目录的名称\n        directoryNama: '',\n        // 法规外键\n        regulationsForeignKey: '',\n        // 目录线索\n        directoryKey: '',\n        // 当前目录到根目录的距离\n        distance: '',\n        // 父id\n        parentId: ''\n      },\n      dialogFormVisible2: false,\n\n      ruleForm3: {\n        level: '',\n        directoryNama: '',\n        directoryId: ''\n      },\n      dialogFormVisible3: false,\n\n      flag: true,\n      regulationsTypeId: '', // 一级分类主键\n      cid: '', // 二级分类主键\n      regulationsId: '', // 法规主键\n      data: [],\n      options: [],\n      twoOptions: [],\n      threeOptions: [],\n      rules: {\n        level: [\n          { required: true, message: '请输入同级排序', trigger: 'blur' },\n          { type: 'number', message: '请输入数字', trigger: 'blur' }\n        ],\n        directoryNama: [\n          {\n            required: true,\n            message: '请输入目录名称'\n          }\n        ]\n\n      }\n    }\n  },\n  mounted() {\n    this.showOneType()\n    // this.getData()\n  },\n  methods: {\n    // 显示一级下拉\n    showOneType() {\n      this.$http.get(this.$url + 'regulationsTrype/showAllOneType').then((res) => {\n        if (res.data.code == '2001') {\n          this.options = res.data.data\n        } else {\n          this.options = []\n        }\n      })\n    },\n    // 显示二级分类下拉\n    isShow() {\n      this.flag = true\n      this.twoOptions = []\n      this.threeOptions = []\n      this.data = []\n      this.cid = ''\n      this.regulationsId = ''\n      this.$http.get(this.$url + 'cassify/classifyList', {\n        params: { 'regulationsTypeId': this.regulationsTypeId }\n      }).then((res) => {\n        if (res.data.code == '2001') {\n          this.twoOptions = res.data.data\n        } else {\n          this.twoOptions = []\n        }\n      })\n    },\n    // 显示法规的下拉\n    isShowfagui() {\n      this.threeOptions = []\n      this.data = []\n      this.regulationsId = ''\n      const params = new URLSearchParams()\n      params.append('cid', this.cid)\n      this.$http.post(this.$url + 'regulations/showRegulationsNameAndId', params).then((res) => {\n        if (res.data.code == '2001') {\n          this.threeOptions = res.data.data\n        } else {\n          this.threeOptions = []\n          this.flag = true\n        }\n      })\n    },\n    showTree() {\n      this.getData()\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.dialogFormVisible = false\n          this.ruleForm.regulationsForeignKey = this.regulationsId\n          this.$http.post(this.$url + 'directory/addOneDirectoryById', this.ruleForm).then((res) => {\n            if (res.data.code == '2001') {\n              this.$message({\n                message: '添加成功',\n                type: 'success'\n              })\n              this.quxiao(formName)\n              this.showTree()\n            } else {\n              this.$message.error('添加失败')\n            }\n          })\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    },\n    quxiao(formName) {\n      this.dialogFormVisible = false\n      this.$refs[formName].resetFields()\n    },\n    // 添加目录\n    append(node, data) {\n      this.dialogFormVisible2 = true\n      // console.log(JSON.stringify(data))\n      this.ruleForm2.data = data\n      // console.log(node)\n    },\n\n    submitForm2(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.ruleForm2.regulationsForeignKey = this.regulationsId\n          this.dialogFormVisible2 = false\n          // console.log(\"这是父级目录\")\n          // console.log(JSON.stringify(this.ruleForm2.data))\n\n          // 如果添加的是一级目录下的节点那么  目录线索就是一级目录主键加一级目录的线索\n          if (this.ruleForm2.data.pid == '0') {\n            // console.log(\"是在一级目录下添加的\")\n            this.ruleForm2.directoryKey = this.ruleForm2.data.id + this.ruleForm2.data.directoryKey\n          } else {\n            // 如果不是一级目录下的节点  那么，目录线索就是父节目录的线索加父节目录的主键加-\n            this.ruleForm2.directoryKey = this.ruleForm2.data.directoryKey + this.ruleForm2.data.id + '-'\n          }\n          // 当前目录距离根节点的距离\n          this.ruleForm2.distance = parseInt(this.ruleForm2.data.distance) + 1\n          // 当前目录的父id\n          this.ruleForm2.parentId = this.ruleForm2.data.id\n\n          const params = new URLSearchParams()\n          params.append('directoryNama', this.ruleForm2.directoryNama)\n          params.append('parentId', this.ruleForm2.parentId)\n          params.append('directoryKey', this.ruleForm2.directoryKey)\n          params.append('distance', this.ruleForm2.distance)\n          params.append('level', this.ruleForm2.level)\n          params.append('regulationsForeignKey', this.ruleForm2.regulationsForeignKey)\n          this.$http.post(this.$url + 'directory/addZiDirectory', params).then((res) => {\n            if (res.data.code == '2001') {\n              this.$message({\n                message: '添加成功',\n                type: 'success'\n              })\n              // console.log(JSON.stringify(node.parent.data))\n              const newChild = { id: parseInt(res.data.data), label: this.ruleForm2.directoryNama, lever: this.ruleForm2.level, directoryKey: this.ruleForm2.directoryKey, distance: this.ruleForm2.distance, pid: this.ruleForm2.parentId, children: [] }\n              if (!this.ruleForm2.data.children) {\n                this.$set(this.ruleForm2.data, 'children', [])\n              }\n              this.ruleForm2.data.children.push(newChild)\n              // console.log(JSON.stringify(newChild))\n              this.getData()// 需要异步刷新更新目录顺序，不需要更新目录顺序直接注释\n              this.quxiao2(formName)\n            } else {\n              this.$message.error('添加失败')\n            }\n          })\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    },\n    quxiao2(formName) {\n      this.dialogFormVisible2 = false\n      this.$refs[formName].resetFields()\n      this.ruleForm2.data = {}\n    },\n\n    // 删除目录\n    remove(node, data) {\n      // alert(JSON.stringify(data))\n      // 要删除的目录主键\n      var directoryId = data.id\n      // 该目录下的子孙目录线索\n      var directoryKey = ''\n      if (data.pid == '0') {\n        directoryKey = data.id + data.directoryKey\n      } else {\n        directoryKey = data.directoryKey + data.id + '-'\n      }\n      // console.log(directoryId)\n      // console.log(directoryKey)\n      const params = new URLSearchParams()\n      params.append('directoryId', directoryId)\n      params.append('directoryKey', directoryKey)\n      this.$http.post(this.$url + 'directory/delDirectory', params).then((res) => {\n        if (res.data.code == '2001') {\n          this.$message({\n            message: '删除成功',\n            type: 'success'\n          })\n          const parent = node.parent\n          const children = parent.data.children || parent.data\n          const index = children.findIndex(d => d.id === data.id)\n          children.splice(index, 1)\n        } else {\n          this.$message.error('删除失败')\n        }\n      })\n    },\n    // 修改同级目录排序\n    updateKeyChildren(data) {\n      this.dialogFormVisible3 = true\n      this.ruleForm3.directoryId = data.id\n      this.ruleForm3.directoryNama = data.label\n      this.ruleForm3.level = data.lever\n    },\n\n    submitForm3(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.dialogFormVisible3 = false\n          this.$http.post(this.$url + 'directory/updateDirectoryById', this.ruleForm3).then((res) => {\n            if (res.data.code == '2001') {\n              this.$message({\n                message: '修改成功',\n                type: 'success'\n              })\n              this.quxiao3(formName)\n              this.getData()\n            } else {\n              this.$message.error('修改失败')\n            }\n          })\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    },\n    quxiao3(formName) {\n      this.dialogFormVisible3 = false\n      this.$refs[formName].resetFields()\n    },\n\n    getData() {\n      const params = new URLSearchParams()\n      params.append('directoryId', this.regulationsId)\n      this.$http.post(this.$url + 'directory/selectDirectoryById2', params).then((res) => {\n        if (res.data.code == '2001') {\n          // console.log(JSON.stringify(res.data.data))\n          this.data = res.data.data\n          this.flag = false\n        } else {\n          this.data = []\n          this.flag = false\n        }\n      })\n    }\n  }\n}\n",null]}