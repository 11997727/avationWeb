{"remainingRequest":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\vue-cli\\vue-admin-template-master\\src\\views\\addClause\\updateClause.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\vue-cli\\vue-admin-template-master\\src\\views\\addClause\\updateClause.vue","mtime":1582552687066},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vue-cli\\vue-admin-template-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TinymceEditor from '../addRegulations/TinymceEditor'\nexport default {\n  components: {\n    TinymceEditor\n  },\n  data() {\n    return {\n      disabled: false,\n      regulationsList: [],\n      valueId: '', // 联动选择框的id主键\n      isResouceShow: 0,\n      ruleForm: {\n        regulationsId: '',\n        clauseNo: '',\n        clauseNoAlias: '',\n        clauseVersion: '',\n        clauseTitle: '',\n        clauseContent: '',\n        clauseAntistop: '',\n        directoryForeignKey: '',\n        clauseId:''\n      },\n      rules: {\n        regulationsId: [\n          { required: true, message: '请选择法规', trigger: 'change' }\n        ],\n        directoryForeignKey: [\n          { required: true, message: '请选择法规目录', trigger: 'change' }\n        ],\n        clauseNo: [\n          { required: true, message: '请输入条款编号', trigger: 'blur' },\n          { type: 'number', message: '请输入数字', trigger: 'blur' }\n        ],\n        clauseNoAlias: [\n          { required: true, message: '请输入条款编号别名', trigger: 'blur' }\n        ],\n        clauseVersion: [\n          { required: true, message: '请输入条款版本号', trigger: 'blur' }\n        ],\n        clauseTitle: [\n          { required: true, message: '请输入条款标题', trigger: 'blur' }\n        ],\n        clauseContent: [\n          { required: true, message: '请输入条款内容' }\n        ],\n        clauseAntistop: [\n          { required: true, message: '请输入关键词', trigger: 'blur' }\n        ]\n      },\n      options: []\n    }\n  },\n  mounted() {\n    // 初始化一级分类下拉\n    this.getRegulations()\n    this.init()\n  },\n  methods: {\n    getRegulations() {\n      this.$http.post(this.$url + 'regulations/showAll').then((res) => {\n        if (res.data.code == '2001') {\n          this.regulationsList = res.data.data\n        } else {\n          this.regulationsList = []\n        }\n      })\n    },\n    init() {\n       this.clauseId = this.$route.query.clauseId// 获取条款的主键\n      var params = new URLSearchParams()\n      params.append('clauseId', this.clauseId)\n      this.$http.post(this.$url + 'clause/queryClauseByClauseId', params).then((res) => {\n        if (res.data.code == '2001') {\n          this.ruleForm = res.data.data// 把数据放入页面\n          // console.log(JSON.stringify(this.ruleForm))\n          this.ruleForm.regulationsId = res.data.data.regulationsForeignkey//视图的参数名和回传的数据不一致，手动赋值\n          const params = new URLSearchParams()\n          params.append('directoryId', this.ruleForm.regulationsId)//获取当前的法规主键\n          this.$http.post(this.$url + 'directory/selectDirectoryById2', params).then((res) => {\n            if (res.data.code == '2001') {\n              this.options = res.data.data//渲染目录下拉框\n              this.valueId = this.ruleForm.directoryForeignKey//视图默认选中\n            } else {\n              this.options = []\n            }\n          })\n        }\n      })\n    },\n    onChange() {\n      ++this.isResouceShow\n      this.valueId = ''\n      this.options = []\n      const params = new URLSearchParams()\n      params.append('directoryId', this.ruleForm.regulationsId)\n      this.$http.post(this.$url + 'directory/selectDirectoryById2', params).then((res) => {\n        if (res.data.code == '2001') {\n          this.options = res.data.data\n        } else {\n          this.options = []\n        }\n      })\n    },\n    onHandleChange() {\n      // console.log(JSON.stringify(this.valueId))\n      if (this.valueId.length === 1) {\n        this.ruleForm.directoryForeignKey = this.valueId[0]\n      } else {\n        this.ruleForm.directoryForeignKey = this.valueId[this.valueId.length - 1]\n      }\n    },\n    // 表单的提交\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          var _this = this\n          // console.log(JSON.stringify(_this.ruleForm))\n          this.$http.post(this.$url + 'clause/updateClause', _this.ruleForm).then((res) => {\n            if (res.data.code == '2001') {\n              this.$message({\n                message: '修改成功',\n                type: 'success'\n              })\n            } else {\n              this.$message.error('修改失败')\n            }\n          })\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    },\n    // 清空表单以及富文本编译器内容\n    // resetForm(formName) {\n    //   this.$refs[formName].resetFields()\n    //   this.$refs.editor.clear()\n    //   this.options = []\n    // },\n    // 文本编译器点击事件\n    onClick(e, editor) {\n      // console.log('Element clicked')\n      // console.log(e)\n      // console.log(editor)\n    },\n    // 获取文本编译器的HTML内容\n    getContent() {\n      // alert(this.$refs.editor.getContent())\n    },\n    // 设置文本编译器的HTML内容\n    setContent(msg) {\n      this.$refs.editor.setContent(msg)\n    },\n    getBack() {\n      this.$router.push({\n        path: '/example/clauseList'\n      })\n    }\n\n  }\n}\n",null]}